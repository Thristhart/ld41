{"version":3,"sources":["../rbd/pnpm-volume/50417417-4282-49c9-ab43-b5448f9f2946/node_modules/.registry.npmjs.org/browser-pack/6.1.0/node_modules/browser-pack/_prelude.js","src/cards.js","src/constants.js","src/index.js","src/lib/audio.js","src/lib/camera.js","src/lib/cardgame.js","src/lib/city.js","src/lib/hand.js","src/lib/images.js","src/lib/renderer.js","src/lib/tile.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import CardGame from \"./lib/cardgame\";\n \nimport audio from \"./lib/audio\";\n\nimport City from \"./lib/city\";\n\nconst CARDS = {\n  gather1: {\n    title: \"Gather Material\",\n    desc: \"Add a Building Material to your pool.\",\n    cost: {},\n    img: \"https://cdn.glitch.com/50417417-4282-49c9-ab43-b5448f9f2946%2Flogs.jpg?1524348341380\",\n    onPlay: function(hand) {\n      console.log(\"gather!\", City, City.resources, City.resources.material);\n      City.resources.material += 1;\n    },\n    beforePlay: function(hand) {\n      audio.getMaterial();\n    },\n  },\n  buildWorkshop: {\n    title: \"Build Workshop\",\n    desc: `Builds a Workshop, a new Deck that will automatically play itself at the start of each turn.\n           This card will remove itself from your deck after playing.`,\n    cost: {material: 3},\n    img: \"https://cdn.glitch.com/50417417-4282-49c9-ab43-b5448f9f2946%2Fworkshop.jpg?1524348074572\",\n    onPlay: function(city, hand) {\n      // do the thing\n    },\n  }\n};\n\nexport default CARDS;","export const TILE_SIZE = 64;\nexport const CITY_WIDTH = 128;\nexport const CITY_HEIGHT = 128;","const canvas = document.getElementById(\"city\");\n\nfunction onResize() {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n}\n\nonResize();\n\nwindow.addEventListener(\"resize\", onResize);\n\ncanvas.addEventListener(\"contextmenu\", event => {\n  event.preventDefault();\n  return false;\n});\n\nimport Renderer from \"./lib/renderer\";\nimport City from \"./lib/city\";\nimport CardGame from \"./lib/cardgame\";\nimport CARDS from \"./cards\";\n\nwindow.debug = CardGame;\n\nconst renderer = new Renderer(canvas);\nCardGame.registerGlobalDragEvents();\n\nimport {TILE_SIZE, CITY_WIDTH, CITY_HEIGHT} from \"./constants\";\n\nrenderer.camera.x = TILE_SIZE * CITY_WIDTH / 2;\nrenderer.camera.y = TILE_SIZE * CITY_HEIGHT / 2;\n\nlet lastUpdateTime = null;\n\nfunction update(timestamp) {\n  requestAnimationFrame(update);\n  \n  if(lastUpdateTime === null) {\n    lastUpdateTime = timestamp;\n  }\n  \n  const dt = timestamp - lastUpdateTime;\n  \n  renderer.update(dt);\n  \n  lastUpdateTime = timestamp;\n}\n\nCardGame.createAndAddCardToHand(CARDS.gather1);\nCardGame.createAndAddCardToHand(CARDS.gather1);\nCardGame.createAndAddCardToHand(CARDS.gather1);\nCardGame.createAndAddCardToHand(CARDS.buildWorkshop);\n\nrequestAnimationFrame(update);","class AudioController {\n  constructor() {\n    this.cardSounds = {};\n    this.specificSounds = {};\n    \n    this.cardSounds.drawCard = this.loadAudio(\"https://cdn.glitch.com/50417417-4282-49c9-ab43-b5448f9f2946%2Fdraw%20card.wav?1524337162393\");\n    this.cardSounds.playCard = this.loadAudio(\"https://cdn.glitch.com/50417417-4282-49c9-ab43-b5448f9f2946%2Fcard%20from%20hand%20to%20play.wav?1524337150629\");\n    \n    this.specificSounds.material = this.loadAudio(\"https://cdn.glitch.com/50417417-4282-49c9-ab43-b5448f9f2946%2Fbuilding%20material.wav?1524352767755\");\n  }\n  loadAudio(url) {\n    let audio = document.createElement(\"audio\");\n    audio.src = url;\n    audio.volume = 0.5;\n    return audio;\n  }\n  playAudioFromStart(audio) {\n    audio.currentTime = 0;\n    audio.play();\n  }\n  drawCard() {\n    this.playAudioFromStart(this.cardSounds.drawCard);\n  }\n  playCard() {\n    this.playAudioFromStart(this.cardSounds.playCard);\n  }\n  getMaterial() {\n    this.playAudioFromStart(this.specificSounds.material);\n  }\n}\n\nlet audio = new AudioController();\n\nexport default audio;","class Camera {\n  constructor() {\n    this.x = 0;\n    this.y = 0;\n    this.scale = 1;\n  }\n  \n  get width() {\n    return window.innerWidth / this.scale;\n  }\n  get height() {\n    return window.innerHeight / this.scale;\n  }\n  \n  translateMousePosition(x, y) {\n    let translated = {x:x, y:y};\n    \n    translated.x = (x / this.scale) - ((window.innerWidth * 0.5) / this.scale);\n    translated.y = (y / this.scale) - ((window.innerHeight * 0.5) / this.scale);\n    \n    translated.x += this.x;\n    translated.y += this.y;\n    \n    return translated\n  }\n}\n\nexport default Camera;","const cardTemplate = document.getElementById(\"cardTemplate\");\n\nlet cardBeingDragged = null;\nlet dragOffsetX = null;\nlet dragOffsetY = null;\nlet dragStartX = null;\nlet dragStartY = null;\n\nimport Hand from \"./hand\";\nimport City from \"./city\";\nimport audio from \"./audio\";\n\nconst hand = new Hand(document.getElementById(\"hand\"));\n\nclass CardGame {\n  static createCard(cardData) {\n    let card = document.importNode(cardTemplate.content, true);\n    card.querySelector(\"h1\").innerHTML = cardData.title;\n    card.querySelector(\"p\").innerHTML = cardData.desc.replace(/\\n/g, \"<br>\");\n    for(let key in cardData.cost) {\n      let costSpan = document.createElement(\"span\");\n      costSpan.className = `cost ${key}`;\n      costSpan.innerHTML = cardData.cost[key];\n      card.querySelector(\".costs\").appendChild(costSpan);\n    }\n    card.querySelector(\"img\").src = cardData.img;\n\n    let cardElement = card.querySelector(\"card\");\n    cardElement.addEventListener(\"contextmenu\", event => {\n      event.preventDefault();\n      return false;\n    });\n    cardElement.addEventListener(\"mousedown\", event => {\n      if(cardBeingDragged && event.which !== 1) {\n        cardBeingDragged.style.transform = \"\";\n        delete(cardBeingDragged.dataset.droppable);\n        cardBeingDragged = null;\n        return;\n      }\n      const rect = cardElement.getBoundingClientRect();\n      const offsetX = event.clientX - rect.left;\n      const offsetY = event.clientY - rect.top;\n\n      cardBeingDragged = cardElement;\n      dragOffsetX = offsetX;\n      dragOffsetY = offsetY;\n\n      dragStartX = event.clientX;\n      dragStartY = event.clientY;\n      event.preventDefault();\n    });\n\n    cardElement.callback = function() {\n      if(cardData.onPlay) {\n        cardData.onPlay(hand);\n      }\n    };\n    \n    cardElement.beforePlayCallback = function() {\n      if(cardData.beforePlay) {\n        cardData.beforePlay(hand);\n      }\n    };\n\n    return card;\n  }\n  static async createAndAddCardToHand(cardData) {\n    let card = this.createCard(cardData);\n    return this.hand.addCard(card);\n  }\n  static registerGlobalDragEvents() {\n    document.body.addEventListener(\"mousemove\", event => {\n      if(!cardBeingDragged) {\n        return;\n      }\n      const rect = document.body.getBoundingClientRect();\n      const offsetX = event.clientX - rect.left;\n      const offsetY = event.clientY - rect.top;\n\n      let dx = offsetX - dragStartX;\n      let dy = offsetY - dragStartY;\n\n      let distance = Math.sqrt(dx * dx + dy * dy);\n\n      if(distance > cardBeingDragged.getBoundingClientRect().height / 3) {\n        cardBeingDragged.dataset.droppable = true;\n      }\n      else {\n        delete(cardBeingDragged.dataset.droppable);\n      }\n\n      cardBeingDragged.style.transform = `translate(${offsetX - dragStartX}px, ${offsetY - dragStartY}px)`;\n    });\n    document.body.addEventListener(\"mouseup\", event => {\n      if(cardBeingDragged) {\n        if(cardBeingDragged.dataset.droppable) {\n          this.playCard(cardBeingDragged, event.clientX, event.clientY);\n        }\n        else {\n          cardBeingDragged.style.transform = \"\";\n        }\n        delete(cardBeingDragged.dataset.droppable);\n        cardBeingDragged = null;\n      }\n    });\n  }\n  \n  static playCard(card, mouseX, mouseY) {\n    card.beforePlayCallback();\n    let position = card.getBoundingClientRect();\n    hand.removeCard(card);\n    card.classList.add(\"playAnim\");\n    document.body.appendChild(card);\n    card.style.transform = `translate(${mouseX - dragOffsetX}px, ${mouseY - dragOffsetY}px)`;\n    audio.playCard();\n    setTimeout(function() {\n      document.body.removeChild(card);\n      card.callback();\n    }, 400);\n  }\n}\n\nCardGame.hand = hand;\n\nexport default CardGame;","import Tile from \"./tile\";\nimport {CITY_WIDTH, CITY_HEIGHT} from \"../constants\";\n\nclass City {\n  static getTile(x, y) {\n    if(x < 0 || y < 0 || x >= this.tiles.length || y >= this.tiles[0].length) {\n      return null;\n    }\n    return this.tiles[x][y];\n  }\n}\n\nCity.tiles = [];\nfor(let x = 0; x < CITY_WIDTH; x++) {\n  City.tiles[x] = [];\n  for(let y = 0; y < CITY_HEIGHT; y++) {\n    City.tiles[x][y] = new Tile(x, y);\n  }\n}\n\nclass Resources {\n  static get materials() {\n    console.log(\"getter on materials\", this._materials);\n    return this._materials;\n  }\n  static set materials(newValue) {\n    console.log(\"setter on materials\", this._materials, newValue);\n    this._materials = newValue;\n    document.getElementById(\"materials\").innerHTML = newValue;\n  }\n  static get infrastructure() {\n    return this._infrastructure;\n  }\n  static set infrastructure(newValue) {\n    this._infrastructure = newValue;\n    document.getElementById(\"infrastructure\").innerHTML = newValue;\n  }\n  static get labour() {\n    return this._labour;\n  }\n  static set labour(newValue) {\n    this._labour = newValue;\n    document.getElementById(\"labour\").innerHTML = newValue;\n  }\n  static get knowledge() {\n    return this._knowledge;\n  }\n  static set knowledge(newValue) {\n    this._knowledge = newValue;\n    document.getElementById(\"knowledge\").innerHTML = newValue;\n  }\n  static get food() {\n    return this._food;\n  }\n  static set food(newValue) {\n    this._food = newValue;\n    document.getElementById(\"food\").innerHTML = newValue;\n  }\n}\n\nResources.materials = 0;\nResources.infrastructure = 0;\nResources.labour = 0;\nResources.knowledge = 0;\nResources.food = 0;\n\nCity.resources = Resources;\n\nwindow.testCity = City;\n\nexport default City;","const handElement = document.getElementById(\"hand\");\n\nimport audio from \"./audio\";\n\nclass Hand {\n  constructor(container) {\n    this.container = container;\n    this.firstCard = null;\n  }\n  \n  async addCard(card) {\n    let cardElem = card.querySelector(\"card\");\n    \n    if(!this.firstCard) {\n      this.firstCard = cardElem;\n    }\n    \n    this.container.appendChild(card);\n    \n    let amountOfCardsInHand = handElement.querySelectorAll(\"card\").length;\n    this.container.dataset.cardcount = amountOfCardsInHand;\n    if(amountOfCardsInHand > 6) {\n      this.burnFirstCard();\n    }\n    \n    audio.drawCard();\n    \n    cardElem.classList.add(\"enterHandAnim\");\n    await new Promise(resolve => {\n      cardElem.addEventListener(\"animationend\", function(event) {\n        if(event.animationName === \"addCardToHandAnimation\") {\n          resolve();\n        }\n      });\n    });\n    cardElem.classList.remove(\"enterHandAnim\");\n    \n  }\n  \n  async burnFirstCard() {\n    return this.burnCard(this.firstCard);\n  }\n  \n  findNewFirstCard() {\n    this.firstCard = null;\n    for(let i = 0; i < this.container.children.length; i++) {\n      let possible = this.container.children[i];\n      if(possible.classList.contains(\"burnCardAnim\")) {\n        continue;\n      }\n      this.firstCard = possible;\n      break;\n    }\n  }\n  \n  async burnCard(card) {\n    card.classList.add(\"burnCardAnim\");\n    if(this.firstCard === card) {\n      this.findNewFirstCard();\n    }\n    await new Promise(resolve => {\n      card.addEventListener(\"animationend\", function(event) {\n        if(event.animationName === \"burnCardAnimation\") {\n          resolve();\n        }\n      });\n    });\n    card.classList.remove(\"burnCardAnim\");\n    return this.removeCard(card);\n  }\n\n  removeCard(card) {\n    if(this.firstCard === card) {\n      this.findNewFirstCard();\n    }\n    this.container.removeChild(card);\n    const amountOfCardsInHand = handElement.querySelectorAll(\"card\").length;\n    this.container.dataset.cardcount = amountOfCardsInHand;\n  }\n}\n\nexport default Hand;","function loadImage(src) {\n  let image = new Image();\n  image.src = src;\n  return image;\n}\nconst IMAGES = {\n  SAND1: new loadImage(\"https://cdn.glitch.com/50417417-4282-49c9-ab43-b5448f9f2946%2FtileSand1.png?1524279136594\"),\n  SAND2: new loadImage(\"https://cdn.glitch.com/50417417-4282-49c9-ab43-b5448f9f2946%2FtileSand2.png?1524279136824\"),\n  GRASS1: new loadImage(\"https://cdn.glitch.com/50417417-4282-49c9-ab43-b5448f9f2946%2FtileGrass1.png?1524279339317\"),\n  GRASS2: new loadImage(\"https://cdn.glitch.com/50417417-4282-49c9-ab43-b5448f9f2946%2FtileGrass2.png?1524279136388\"),\n};\n\nexport default IMAGES;","import Camera from './camera';\nimport City from \"./city\";\n\nimport {TILE_SIZE} from \"../constants\";\n\nimport Images from \"./images\";\n\nclass Renderer {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.context = this.canvas.getContext(\"2d\");\n    this.context.imageSmoothingEnabled = false;\n    this.context.mozImageSmoothingEnabled = false;\n    this.context.webkitImageSmoothingEnabled = false;\n    this.context.msImageSmoothingEnabled = false;\n    this.context.imageSmoothingEnabled = false;\n    this.camera = new Camera();\n  }\n  \n  update(dt) {\n    this.context.save();\n    \n    this.context.translate(this.canvas.width / 2 - this.camera.x * this.camera.scale,\n                           this.canvas.height / 2 - this.camera.y * this.camera.scale);\n    this.context.scale(this.camera.scale, this.camera.scale);\n    \n    let leftBound = this.camera.x - this.camera.width / 2;\n    let rightBound = this.camera.x + this.camera.width / 2;\n    \n    let topBound = this.camera.y - this.camera.height / 2;\n    let bottomBound = this.camera.y + this.camera.height / 2;\n    \n    let leftCityBound = Math.floor(leftBound / TILE_SIZE);\n    let rightCityBound = Math.ceil(rightBound / TILE_SIZE);\n    \n    let topCityBound = Math.floor(topBound / TILE_SIZE);\n    let bottomCityBound = Math.ceil(bottomBound / TILE_SIZE);\n    \n    this.context.clearRect(this.camera.x - this.camera.width / 2, this.camera.y - this.camera.height / 2, this.camera.width, this.camera.height);\n    \n    for(let x = leftCityBound; x < rightCityBound; x++) {\n      for(let y = topCityBound; y < bottomCityBound; y++) {\n        let tile = City.getTile(x, y);\n        if(tile) {\n          this.context.drawImage(Images.GRASS1, x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE);\n        }\n      }\n    }\n    \n    this.context.restore();\n  }\n}\n\nexport default Renderer;","class Tile {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n    this.type = \"grass\";\n  }\n}\n\nexport default Tile;"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}